#!/bin/sh
#
# * $applet_list is generated by busybox_static.petbuild
#   after compiling a busybox compatible with the os arch
# * This script can be called from anywhere and will
#   always work in the directory it is located in
# * First try to use actual applet list, otherwise fall back to $applet_list
#
# Arguments:
# $1 = busybox binary to use
#

applet_list='[ [[ acpid add-shell addgroup adduser adjtimex ar arp arping ash awk base64 basename bbconfig beep blkdiscard blkid blockdev bootchartd brctl bunzip2 bzcat bzip2 cal cat catv chat chattr chgrp chmod chown chpasswd chpst chroot chrt chvt cksum clear cmp comm conspy cp cpio crond crontab cryptpw cut date dc dd deallocvt delgroup deluser depmod devfsd devmem df diff dirname dmesg dnsdomainname dos2unix dpkg dpkg-deb du dumpkmap echo ed eject elspci env envdir envuidgid ether-wake expand expr fakeidentd false fatattr fbset fbsplash fdflush fdformat fdisk fgconsole find findfs flash_eraseall flash_lock flash_unlock flashcp flock fold free freeramdisk fsck fsck.minix fstrim fsync ftpget ftpput fuser getopt getty groups guess_fstype gunzip gzip halt hd hdparm head hexdump hostid hostname hwclock i2cdetect i2cdump i2cget i2cset id ifconfig ifdown ifenslave ifplugd ifup init inotifyd insmod install ionice iostat ip ipaddr ipcalc ipcrm ipcs iplink iproute iprule iptunnel kbd_mode kill killall killall5 klogd less linux32 linux64 linuxrc ln loadfont loadkmap logger login logname logread losetup lpd lpq lpr ls lsattr lsmod lsof lspci lsusb lzcat lzma lzop lzopcat makedevs makemime man md5sum mdev mesg microcom mkdir mkdosfs mke2fs mkfifo mkfs.ext2 mkfs.reiser mkfs.vfat mknod mkpasswd mkswap mktemp modinfo modprobe more mount mountpoint mpstat mt mv nameif nanddump nandwrite nbd-client nc netstat nice nmeter nohup nsenter nslookup od openvt passwd patch pgrep pidof ping ping6 pipe_progress pivot_root pkill pmap popmaildir poweroff powertop printenv printf ps pscan pstree pwd pwdx raidautorun rdate rdev readahead readlink readprofile realpath reboot reformime remove-shell renice reset resize rev rfkill rm rmdir rmmod route rpm rpm2cpio rtcwake run-parts runsv runsvdir rx script scriptreplay sed sendmail seq setarch setconsole setfont setkeycodes setlogcons setserial setsid setuidgid sh sha1sum sha256sum sha3sum sha512sum showkey shuf slattach sleep smemcap softlimit sort split start-stop-daemon stat strings stty su sulogin sum sv svlogd swapoff swapon switch_root sync sysctl syslogd tac tail tar taskset tee telnet test tftp time timeout top touch tr traceroute traceroute6 true truncate tty ttysize tunctl tune2fs ubiattach ubidetach ubimkvol ubirename ubirmvol ubirsvol ubiupdatevol udhcpc udhcpc6 udpsvd uevent umount uname uncompress unexpand uniq unix2dos unlink unlzma unlzop unshare unxz unzip uptime usleep uudecode uuencode vconfig vercmp vi vlock volname waitmax watch watchdog wc wget which whoami whois xargs xz xzcat yes zcat zcip '

sdir=$(dirname "$0")

if [ -x "$1" ] ; then
	# busybox path has been specified, not in initrd
	# ex: [chroot $NEWROOT] [$PATH_TO/]bb-create-symlinks /bin/busybox
	echo "Creating symlinks to $1 in $sdir"
	alist=$($1 --list)
	[ "x$alist" = "x" ] && alist="$applet_list"
	for a in $alist ; do
		[ ! -e "$a" ] && ln -s $1 "$sdir/$a"
	done
	exit 0
fi

#------------------------------------------------------
#                      initrd
#------------------------------------------------------

if [ -f "$sdir/busybox" ] ; then
	alist=$($sdir/busybox --list)
	[ "x$alist" = "x" ] && alist="$applet_list"
	for a in $alist ; do
		[ ! -e "$a" ] && ln -s busybox "$sdir/$a"
	done
fi

if [ -f "$sdir/fsck.fat" ] ; then
	ln -s fsck.fat "$sdir/fsck.vfat"
	ln -s fsck.fat "$sdir/fsck.msdos"
fi

if [ -f "$sdir/e2fsck" ] ; then
	ln -s e2fsck "$sdir/fsck.ext2"
	ln -s e2fsck "$sdir/fsck.ext3"
	ln -s e2fsck "$sdir/fsck.ext4"
	ln -s e2fsck "$sdir/fsck.ext4dev"
fi

### END ###
