diff -Naur busybox-1.24.2/coreutils/cp.c busybox-1.24.2-cp-patch/coreutils/cp.c
--- busybox-1.24.2/coreutils/cp.c	2016-02-11 11:50:37.000000000 +0000
+++ busybox-1.24.2-cp-patch/coreutils/cp.c	2016-05-22 11:48:56.802919343 +0000
@@ -31,6 +31,7 @@
 //usage:     "\n	-f	Overwrite"
 //usage:     "\n	-i	Prompt before overwrite"
 //usage:     "\n	-l,-s	Create (sym)links"
+//usage:     "\n	-u	Copy if SOURCE file is newer than the destination"
 
 #include "libbb.h"
 #include "libcoreutils/coreutils.h"
@@ -53,8 +54,10 @@
 		OPT_r = 1 << (sizeof(FILEUTILS_CP_OPTSTR)),
 		OPT_P = 1 << (sizeof(FILEUTILS_CP_OPTSTR)+1),
 		OPT_v = 1 << (sizeof(FILEUTILS_CP_OPTSTR)+2),
+		OPT_u = 1 << (sizeof(FILEUTILS_CP_OPTSTR)+3),
 #if ENABLE_FEATURE_CP_LONG_OPTIONS
-		OPT_parents = 1 << (sizeof(FILEUTILS_CP_OPTSTR)+3),
+		OPT_parents = 1 << (sizeof(FILEUTILS_CP_OPTSTR)+4),
+		OPT_rmdest  = 1 << (sizeof(FILEUTILS_CP_OPTSTR)+5),
 #endif
 	};
 
@@ -76,10 +79,12 @@
 		"recursive\0"      No_argument "R"
 		"symbolic-link\0"  No_argument "s"
 		"verbose\0"        No_argument "v"
-		"parents\0"        No_argument "\xff"
+		"update\0"         No_argument "u"
+		"parents\0"        No_argument "\xfe"
+		"remove-destination\0" No_argument "\xff"
 		;
 #endif
-	flags = getopt32(argv, FILEUTILS_CP_OPTSTR "arPv");
+	flags = getopt32(argv, FILEUTILS_CP_OPTSTR "arPvu");
 	/* Options of cp from GNU coreutils 6.10:
 	 * -a, --archive
 	 * -f, --force
@@ -161,6 +166,10 @@
 				bb_error_msg_and_die("with --parents, the destination must be a directory");
 			}
 		}
+		if (flags & OPT_rmdest) {
+			flags |= FILEUTILS_FORCE;
+			flags |= FILEUTILS_RMDEST;
+		}
 #endif
 
 		/* ...if neither is a directory...  */
diff -Naur busybox-1.24.2/include/libbb.h busybox-1.24.2-cp-patch/include/libbb.h
--- busybox-1.24.2/include/libbb.h	2016-03-17 20:35:49.000000000 +0000
+++ busybox-1.24.2-cp-patch/include/libbb.h	2016-05-22 00:02:57.894985357 +0000
@@ -359,6 +359,8 @@
 	FILEUTILS_IGNORE_CHMOD_ERR = 1 << 11,
 	/* -v */
 	FILEUTILS_VERBOSE         = (1 << 12) * ENABLE_FEATURE_VERBOSE,
+	FILEUTILS_UPDATE          = 1 << 13, /* -u */
+	FILEUTILS_RMDEST          = 1 << 14, /* cp --remove-destination */
 };
 #define FILEUTILS_CP_OPTSTR "pdRfilsLH" IF_SELINUX("c")
 extern int remove_file(const char *path, int flags) FAST_FUNC;
diff -Naur busybox-1.24.2/libbb/copy_file.c busybox-1.24.2-cp-patch/libbb/copy_file.c
--- busybox-1.24.2/libbb/copy_file.c	2016-02-11 11:50:37.000000000 +0000
+++ busybox-1.24.2-cp-patch/libbb/copy_file.c	2016-05-22 14:36:24.822601716 +0000
@@ -64,6 +64,11 @@
 		bb_perror_msg("can't create '%s'", dest);
 		return -1; /* error */
 	}
+#if ENABLE_FEATURE_CP_LONG_OPTIONS
+	if (flags & FILEUTILS_RMDEST)
+		if (flags & FILEUTILS_VERBOSE)
+			printf("removed '%s'\n", dest);
+#endif
 	return 1; /* ok (to try again) */
 }
 
@@ -210,6 +215,22 @@
 		goto preserve_mode_ugid_time;
 	}
 
+	if (dest_exists) {
+		if (flags & FILEUTILS_UPDATE) {
+			if (source_stat.st_mtime <= dest_stat.st_mtime) {
+				return 0; /* source file must be newer */
+			}
+		}
+#if ENABLE_FEATURE_CP_LONG_OPTIONS
+		if (flags & FILEUTILS_RMDEST) {
+			ovr = ask_and_unlink(dest, flags);
+			if (ovr <= 0)
+				return ovr;
+			dest_exists = 0;
+		}
+#endif
+	}
+
 	if (flags & (FILEUTILS_MAKE_SOFTLINK|FILEUTILS_MAKE_HARDLINK)) {
 		int (*lf)(const char *oldpath, const char *newpath);
  make_links:
