#!/bin/sh
# functions library
# this is sourced from <app>_static/<awk>_static.petbuild

. ../build.conf
echo
echo "main dir is $MWD"
echo

ARCH=`uname -m`
case $ARCH in
	arm*) ARCH=armv6l ;; # newest supported
	*)    ARCH=$ARCH ;;
esac
[ "$OVERRIDE_ARCH" ] && ARCH=${OVERRIDE_ARCH}

#---------------------------------------------------------

function exit_error() {
	if [ "$HALT_ERRS" = "1" ] ; then #build.conf
		echo -n > $MWD/.fatal
	fi
	exit $@
}

function retrieve() {
	SRCS=${1%% *}
	WC=`echo "$1" | wc -w`
	[ "$WC" -eq 2 ] && CERT=${1##* }
	if [ -f ../0sources/${SRCS} ] ; then
		[ "$DLD_ONLY" -eq 1 ] && exit #build.conf
		cp -a ../0sources/${SRCS} .
	else
		wget -c --no-check-certificate ${URL}/${SRCS} $CERT
		if [ $? -ne 0 ] ; then
			rm -f ${SRCS}
			exit_error 1
		fi
		mv -f ${SRCS} ../0sources
		[ "$DLD_ONLY" -eq 1 ] && exit #build.conf
	fi
}

function extract() {
	tfile="$@"
	if [ -f "$tfile" ] ; then
		tar -axf ${tfile}
	elif [ -f "../0sources/$tfile" ] ; then
		tar -axf ../0sources/${tfile}
	else
		echo "No such file: $tfile"
		exit_error 1
	fi
	if [ $? -ne 0 ] ; then
		[ -f "$tfile" ] && rm -f ${tfile}
		exit_error 1
	fi
	[ -f "$tfile" ] && mv -f ${tfile} ../0sources
}

function abort_if_file_not_found() {
	[ "$1" ] || exit_error 1
	for i in "$@" ; do
		if [ ! -f "$i" ] ; then
			echo "$i: file does no exist!"
			exit_error 1
		fi
	done
}

#---------------------------------------------------------

function cross_compile() {
	#XPATH is set in build.sh
	export PATH=${XPATH}/bin:$PATH
	case $1 in
		"") make ${MKFLG} CC=${ARCH}-gcc LD=${ARCH}-ld LDFLAGS=-static ;;
		*) $@ ;;
	esac
}

#this is inside the source dir
function _configure() {
	unset host
	if [ -f configure ] ; then
		#this is to avoid possible problems with the triplet
		#true for aboriginal linux cross compiler
		sed -i  -e 's|^build_os=.*|build_os=linux|' \
				-e 's|^host_os=.*|host_os=linux|' \
				-e 's|^target_os=.*|target_os=linux|' \
				-e 's|linux_os=no|linux_os=yes|' \
				configure
	fi
	if [ -d "$XPATH" ] ; then
		CCOMP='cross_compile'
		host="--host=${ARCH}"
	fi
	echo -e "\n--------------------------------"
	echo -e "${CCOMP} ./configure ${opts} ${host}"
	echo -e "--------------------------------\n" ; echo
	${CCOMP} ./configure ${opts} ${host} #opts is set in the calling script
	[ $? -ne 0 ] && exit_error 1
}

#this is inside the source dir
function _make() {
	cf="-g -Os" #-fmerge-all-constants -fno-unroll-loops -fomit-frame-pointer -ffunction-sections -fdata-sections"
	if [ -f Makefile ] ; then
		sed -i "s|\(^CFLAGS =.*\)|\1 $cf|g" $(find . -type f -name Makefile)
		echo -e "\n-------------------"
		grep '^CFLAGS = ' $(find . -type f -name Makefile)
		echo -e "---------------------"
	else
		export CFLAGS="$cf"
	fi
	if [ -d "$XPATH" ] ; then
		[ "$1" != "" -a "$1" != "make" ] && make1=make
		CCOMP='cross_compile'
		echo -e "\n-------------------"
		echo -e "${CCOMP} $make1 $@"
		echo -e "-------------------\n"
		${CCOMP} $make1 $@
	else
		# system gcc
		[ "$1" = "make" ] && shift
		if [ "$1" = "" ] ; then
			make LDFLAGS=-static CFLAGS=-static
		else
			make $@
		fi
	fi
	return $?
}

#this is inside the source dir
function _install() {
	local file="$1" dest="$2"
	#[ -f "$file" ] || exit_error 1
	if [ -d "$XPATH" ] ; then
		CCOMP='cross_compile'
		${CCOMP} ${ARCH}-strip --strip-all "$file" #--strip-unneeded
	else
		strip --strip-all "$file"
	fi
	chmod +x "$file"
	cp "$file" "$dest"
}

### END ###
